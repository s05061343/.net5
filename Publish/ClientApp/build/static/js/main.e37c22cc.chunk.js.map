{"version":3,"sources":["components/Login/Login.js","store/store.js","components/Home/Home.jsx","components/Login/Logout.jsx","components/NoMatch/NotFound.jsx","store/AuthorizedRoute.js","components/NavMenu.jsx","components/Layout.jsx","components/Login/Login.jsx","App.js","registerServiceWorker.ts","index.jsx","store/configureStore.js"],"names":["actionCreators","post","dispatch","getState","appState","console","log","form","FormData","append","loginUser","user","userId","fetch","method","body","then","response","json","data","sessionStorage","setItem","JSON","stringify","authToken","type","password","isAuth","catch","e","setUserId","setPassword","logout","removeItem","reducers","incomingAction","undefined","action","connect","href","Logout","React","render","className","id","name","onClick","this","props","state","store","AuthorizedRoute","Component","component","rest","pending","getItem","location","pathname","to","NavMenu","isOpen","toggle","setState","Navbar","light","Container","NavbarBrand","tag","Link","NavbarToggler","Collapse","navbar","NavItem","NavLink","Layout","children","Login","aria-describedby","placeholder","onChange","target","value","exact","path","NotFound","Home","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","baseUrl","document","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","initialState","middleware","thunk","routerMiddleware","rootReducer","combineReducers","router","connectRouter","enhancers","windowIfDefined","__REDUX_DEVTOOLS_EXTENSION__","push","createStore","compose","applyMiddleware","configureStore","ReactDOM","App","getElementById","URL","process","toString","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e37c22cc.chunk.js","sourcesContent":["export const actionCreators = {\r\n    post: () => (dispatch, getState) => {\r\n        const appState = getState();\r\n        console.log(appState);\r\n        const form = new FormData();\r\n        form.append('userId', appState.loginUser.user.userId);\r\n        fetch(\"auth/default/Login\", {\r\n            method: \"POST\",\r\n            body: form\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                sessionStorage.setItem('authToken', JSON.stringify(data.authToken));\r\n                dispatch({\r\n                    type: \"POST_LOGIN\",\r\n                    user: {\r\n                        authToken: data.authToken,\r\n                        userId: data.userId,\r\n                        password: '',\r\n                        isAuth: data.authToken ? true : false\r\n                    },\r\n                });\r\n            })\r\n            .catch(e => {\r\n                /*發生錯誤時要做的事情*/\r\n            })\r\n    },\r\n\r\n    setUserId: (userId) => (dispatch, getState) => {\r\n        const appState = getState();\r\n        dispatch({\r\n            type: \"SET_USERID\",\r\n            user: {\r\n                authToken: '',\r\n                userId: userId,\r\n                password: appState.loginUser.user.password,\r\n                isAuth: false\r\n            }\r\n        });\r\n    },\r\n\r\n    setPassword: (password) => (dispatch, getState) => {\r\n        const appState = getState();\r\n        dispatch({\r\n            type: \"SET_PASSWORD\",\r\n            user: {\r\n                authToken: '',\r\n                userId: appState.loginUser.user.userId,\r\n                password: password,\r\n                isAuth: false\r\n            }\r\n        });\r\n    },\r\n\r\n    logout: () => (dispatch, getState) => {\r\n        sessionStorage.removeItem('authToken');\r\n        dispatch({\r\n            type: \"USER_LOGOUT\",\r\n            user: {\r\n                authToken: '',\r\n                userId: '',\r\n                password: '',\r\n                isAuth: false\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const reducer = (loginUser, incomingAction) => {\r\n    if (loginUser === undefined) {\r\n        return {\r\n            user: {\r\n                authToken: '',\r\n                userId: '',\r\n                password: '',\r\n                isAuth: false\r\n            }\r\n        };\r\n    }\r\n\r\n    const action = incomingAction;\r\n    console.log(action);\r\n\r\n    switch (action.type) {\r\n        case 'POST_LOGIN':\r\n        case 'SET_USERID':\r\n        case 'SET_PASSWORD':\r\n        case 'USER_LOGOUT':\r\n            return {\r\n                user: action.user\r\n            };\r\n        default:\r\n            return loginUser;\r\n    }\r\n};\r\n\r\n","import * as Login from '../components/Login/Login.js';\r\n\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n    loginUser: Login.reducer\r\n};\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>Hello, world!</h1>\r\n    <p>Welcome to your new single-page application, built with:</p>\r\n    <ul>\r\n      <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n      <li><a href='https://facebook.github.io/react/'>React</a> and <a href='https://redux.js.org/'>Redux</a> for client-side code</li>\r\n      <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n    </ul>\r\n    <p>To help you get started, we have also set up:</p>\r\n    <ul>\r\n      <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n      <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n      <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n    </ul>\r\n    <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n  </div>\r\n);\r\n\r\nexport default connect()(Home);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as store from '../Login/Login.js';\r\n\r\nclass Logout extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-5 mx-auto\">\r\n                            <div id=\"first\">\r\n                                <div className=\"myform form \">\r\n                                    <form action=\"\" method=\"post\" name=\"login\">\r\n                                        <div className=\"d-grid gap-2\">\r\n                                            <button type=\"button\" className=\"btn btn-success btn-lg\" onClick={() => { this.props.logout(); }}>登出</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect((state) => state.loginUser, store.actionCreators)(Logout);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst NotFound = () => (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"error-template\">\r\n                    <h1>\r\n                        Oops!</h1>\r\n                    <h2>\r\n                        404 Not Found</h2>\r\n                    <div className=\"error-details\">\r\n                        Sorry, an error has occured, Requested page not found!\r\n                </div>\r\n                    <div className=\"error-actions\">\r\n                        <a href=\"http://www.jquery2dotnet.com\" className=\"btn btn-primary btn-lg\"><span className=\"glyphicon glyphicon-home\"></span>\r\n                        Take Me Home </a><a href=\"http://www.jquery2dotnet.com\" className=\"btn btn-default btn-lg\"><span className=\"glyphicon glyphicon-envelope\"></span> Contact Support </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default connect()(NotFound);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Home from '../components/Home/Home.jsx';\r\nimport Logout from '../components/Login/Logout.jsx';\r\nimport NotFound from '../components/NoMatch/NotFound.jsx';\r\nclass AuthorizedRoute extends React.Component {\r\n    render() {\r\n        const { component: Component, pending, user, ...rest } = this.props\r\n        const isAuth = sessionStorage.getItem(\"authToken\");\r\n        if (isAuth && this.props.location.pathname === '/login') {\r\n            return (\r\n                <Redirect to=\"/logout\" />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Route {...rest} render={props => {\r\n                return isAuth || this.props.location.pathname === '/login'\r\n                    ? <Component {...props} />\r\n                    : <Redirect to=\"/login\" />\r\n            }} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => state.loginUser)(AuthorizedRoute);","import * as React from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/NavMenu.css';\r\n\r\n\r\n\r\nexport default class NavMenu extends React.PureComponent {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <Navbar className=\"navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3\" light>\r\n                    <Container>\r\n                        <NavbarBrand tag={Link} to=\"/\">WebUI</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} className=\"mr-2\" />\r\n                        <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={this.state.isOpen} navbar>\r\n                            <ul className=\"navbar-nav flex-grow\">\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/404\">NotFound</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/login\">Login</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/logout\">Logout</NavLink>\r\n                                </NavItem>\r\n                            </ul>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport NavMenu from './NavMenu';\r\n\r\nexport default class Layout extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavMenu />\r\n                <Container>\r\n                    {this.props.children}\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as store from '../Login/Login.js';\r\n\r\nclass Login extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-5 mx-auto\">\r\n                            <div id=\"first\">\r\n                                <div className=\"myform form \">\r\n                                    <div className=\"logo mb-3\">\r\n                                        <div className=\"col-md-12 text-center\">\r\n                                            <h1>Login</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                    <form action=\"\" method=\"post\" name=\"login\">\r\n                                        <div className=\"mb-3\">\r\n                                            <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"帳號\"\r\n                                                onChange={(e) => { this.props.setUserId(e.target.value); }} />\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <input type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"密碼\"\r\n                                                onChange={(e) => { this.props.setPassword(e.target.value); }} />\r\n                                        </div>\r\n                                        <div className=\"d-grid gap-2\">\r\n                                            <button type=\"button\" className=\"btn btn-primary btn-lg\" onClick={() => { this.props.post(); }}>登入</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect((state) => state.loginUser, store.actionCreators)(Login);\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Redirect } from 'react-router-dom'\r\nimport AuthorizedRoute from './store/AuthorizedRoute.js'\r\n\r\n// Layouts\r\nimport Layout from './components/Layout.jsx';\r\nimport Home from './components/Home/Home.jsx';\r\nimport Login from './components/Login/Login.jsx';\r\nimport NotFound from './components/NoMatch/NotFound.jsx';\r\nimport Logout from './components/Login/Logout.jsx';\r\n\r\nimport '../src/css/custom.css'\r\n\r\nexport default () => (\r\n    <BrowserRouter>\r\n        <Layout>\r\n            <Switch>\r\n                <AuthorizedRoute exact path=\"/login\" component={Login} />\r\n                <AuthorizedRoute exact path=\"/404\" component={NotFound} />\r\n                <AuthorizedRoute exact path=\"/\" component={Home} />\r\n                <AuthorizedRoute path=\"/logout\" component={Logout} />\r\n                <Redirect to=\"/404\" />\r\n            </Switch>\r\n        </Layout>\r\n    </BrowserRouter>\r\n);","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const url = process.env.PUBLIC_URL as string;\r\n        const publicUrl = new URL(url, window.location.toString());\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing as ServiceWorker;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n            <App />\r\n        </ConnectedRouter>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { reducers } from './store.js';\r\n\r\nexport default function configureStore(history, initialState) {\r\n    const middleware = [\r\n        thunk,\r\n        routerMiddleware(history)\r\n    ];\r\n\r\n    const rootReducer = combineReducers({\r\n        ...reducers,\r\n        router: connectRouter(history)\r\n    });\r\n\r\n    const enhancers = [];\r\n    const windowIfDefined = typeof window === 'undefined' ? null : window; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n    }\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware), ...enhancers)\r\n    );\r\n}\r\n"],"sourceRoot":""}