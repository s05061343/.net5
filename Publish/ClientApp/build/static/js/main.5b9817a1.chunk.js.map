{"version":3,"sources":["utils/api.js","components/Login/Login.js","components/Shortemer/ShortenUrl.js","store/configureReducers.js","components/NavMenu.jsx","components/Layout.jsx","components/Shortemer/ShortenUrl.jsx","App.js","registerServiceWorker.ts","index.jsx","store/configureStore.js"],"names":["userRequest","axios","create","baseURL","shortenRequest","actionCreators","post","dispatch","getState","data","appState","formData","FormData","append","loginUser","user","userId","password","then","res","console","log","JSON","parse","request","response","status","sessionStorage","setItem","stringify","authToken","store","addNotification","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","isAuth","catch","err","title","setUserId","setPassword","logout","removeItem","document","cookie","json","url","shortemer","value","originalUrl","translationUrl","setUrl","reducers","incomingAction","undefined","NavMenu","state","isOpen","toggle","setState","Navbar","className","aria-label","NavbarToggler","onClick","this","data-bs-toggle","NavbarBrand","tag","Link","to","Collapse","React","connect","Layout","props","children","ShortenUrl","src","alt","width","height","id","placeholder","onChange","e","target","htmlFor","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","baseUrl","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","initialState","middleware","thunkMiddleware","routerMiddleware","loggerMiddleware","rootReducer","combineReducers","router","connectRouter","enhancers","windowIfDefined","__REDUX_DEVTOOLS_EXTENSION__","push","createStore","compose","applyMiddleware","configureStore","ReactDOM","App","getElementById","URL","process","toString","origin","addEventListener","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5b9817a1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// User相關的 api\r\nconst userRequest = axios.create({\r\n    baseURL: '/'\r\n});\r\n\r\n// User 相關的 api\r\nexport const apiUserLogin = data => userRequest.post('/auth/default/login', data);\r\nexport const apiUserLoginCheck = data => userRequest.post('/auth/default/CookieLogin', data);\r\nexport async function getApiUserLoginCheck() {\r\n    try {\r\n        const item = await apiUserLoginCheck({});\r\n        return item;\r\n    } catch (err) {\r\n        console.error(err);\r\n        sessionStorage.removeItem(\"authToken\");\r\n    }\r\n}\r\n\r\nconst shortenRequest = axios.create({\r\n    baseURL: 'https://tomz-shorten-url.herokuapp.com',\r\n});\r\nexport const apiShortenUrl = data => shortenRequest.post('/urlshortemer/default/shorten', data);","import { store } from 'react-notifications-component';\r\nimport { apiUserLogin } from '../../utils/api.js';\r\n\r\nexport const actionCreators = {\r\n    post: () => (dispatch, getState) => {\r\n        const appState = getState();\r\n\r\n        const formData = new FormData();\r\n        formData.append('userId', appState.loginUser.user.userId);\r\n        formData.append('password', appState.loginUser.user.password);\r\n\r\n        apiUserLogin(formData)\r\n            .then(res => {\r\n                console.log(res);\r\n                const data = JSON.parse(res.request.response);\r\n                console.log(data);\r\n                if (res.status === 200) {\r\n                    sessionStorage.setItem('authToken', JSON.stringify(data.authToken));\r\n                    store.addNotification({\r\n                        message: \"登入成功\",\r\n                        type: \"success\",\r\n                        insert: \"top\",\r\n                        container: \"top-right\",\r\n                        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                        dismiss: {\r\n                            duration: 5000,\r\n                            onScreen: true\r\n                        }\r\n                    });\r\n                    dispatch({\r\n                        type: \"POST_LOGIN\",\r\n                        user: {\r\n                            authToken: data.authToken,\r\n                            userId: data.userId,\r\n                            password: '',\r\n                            isAuth: data.authToken ? true : false\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                store.addNotification({\r\n                    title: \"登入失敗\",\r\n                    message: \"帳號或密碼輸入錯誤，請重新確認後重試\",\r\n                    type: \"warning\",\r\n                    insert: \"top\",\r\n                    container: \"top-right\",\r\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                    dismiss: {\r\n                        duration: 5000,\r\n                        onScreen: true\r\n                    }\r\n                });\r\n                //    dispatch({\r\n                //        type: \"ERROR_MESSAGE\",\r\n                //        user: {\r\n                //            authToken: '',\r\n                //            userId: appState.loginUser.user.userId,\r\n                //            password: appState.loginUser.user.password,\r\n                //            isAuth: false\r\n                //        },\r\n                //    });\r\n            });\r\n    },\r\n\r\n    setUserId: (userId) => (dispatch, getState) => {\r\n        const appState = getState();\r\n        dispatch({\r\n            type: \"SET_USERID\",\r\n            user: {\r\n                authToken: '',\r\n                userId: userId,\r\n                password: appState.loginUser.user.password,\r\n                isAuth: false\r\n            }\r\n        });\r\n    },\r\n\r\n    setPassword: (password) => (dispatch, getState) => {\r\n        const appState = getState();\r\n        dispatch({\r\n            type: \"SET_PASSWORD\",\r\n            user: {\r\n                authToken: '',\r\n                userId: appState.loginUser.user.userId,\r\n                password: password,\r\n                isAuth: false\r\n            }\r\n        });\r\n    },\r\n\r\n    logout: () => (dispatch, getState) => {\r\n        sessionStorage.removeItem('authToken');\r\n        document.cookie = \"AuthToken=; path=/;\";\r\n        dispatch({\r\n            type: \"USER_LOGOUT\",\r\n            user: {\r\n                authToken: '',\r\n                userId: '',\r\n                password: '',\r\n                isAuth: false\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const reducer = (loginUser, incomingAction) => {\r\n    if (loginUser === undefined) {\r\n        return {\r\n            user: {\r\n                authToken: '',\r\n                userId: '',\r\n                password: '',\r\n                isAuth: false\r\n            }\r\n        };\r\n    }\r\n\r\n    switch (incomingAction.type) {\r\n        case 'POST_LOGIN':\r\n        case 'SET_USERID':\r\n        case 'SET_PASSWORD':\r\n        case 'USER_LOGOUT':\r\n        case 'ERROR_MESSAGE':\r\n            return {\r\n                user: incomingAction.user\r\n            };\r\n        default:\r\n            return loginUser;\r\n    }\r\n};\r\n\r\n","import { store } from 'react-notifications-component';\r\nimport { apiShortenUrl } from '../../utils/api.js';\r\n\r\nexport const actionCreators = {\r\n    post: () => (dispatch, getState) => {\r\n        const appState = getState();\r\n\r\n        const json = { url: appState.shortemer.value.originalUrl }\r\n\r\n        apiShortenUrl(json)\r\n            .then(res => {\r\n                console.log(res);\r\n                const data = JSON.parse(res.request.response);\r\n                console.log(data);\r\n                if (res.status === 200) {\r\n                    store.addNotification({\r\n                        message: \"縮網址完成\",\r\n                        type: \"success\",\r\n                        insert: \"top\",\r\n                        container: \"top-right\",\r\n                        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                        dismiss: {\r\n                            duration: 5000,\r\n                            onScreen: true\r\n                        }\r\n                    });\r\n                    dispatch({\r\n                        type: \"POST\",\r\n                        value: {\r\n                            originalUrl: appState.shortemer.value.originalUrl,\r\n                            translationUrl: data.data\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                store.addNotification({\r\n                    title: \"產生失敗\",\r\n                    message: \"縮網址產生失敗，請再試一次。\",\r\n                    type: \"warning\",\r\n                    insert: \"top\",\r\n                    container: \"top-right\",\r\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                    dismiss: {\r\n                        duration: 5000,\r\n                        onScreen: true\r\n                    }\r\n                });\r\n            });\r\n    },\r\n\r\n    setUrl: (originalUrl) => (dispatch, getState) => {\r\n        const appState = getState();\r\n        dispatch({\r\n            type: \"SET_URL\",\r\n            value: {\r\n                originalUrl: originalUrl,\r\n                translationUrl: ''\r\n            }\r\n        });\r\n    },\r\n};\r\n\r\nexport const reducer = (shortemer, incomingAction) => {\r\n    if (shortemer === undefined) {\r\n        return {\r\n            value: {\r\n                originalUrl: '',\r\n                translationUrl: ''\r\n            }\r\n        };\r\n    }\r\n\r\n    switch (incomingAction.type) {\r\n        case 'POST':\r\n        case 'SET_URL':\r\n            return {\r\n                value: incomingAction.value\r\n            };\r\n        default:\r\n            return shortemer;\r\n    }\r\n};\r\n\r\n","import * as Login from '../components/Login/Login.js';\r\nimport * as ShortenUrl from '../components/Shortemer/ShortenUrl.js';\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n    loginUser: Login.reducer,\r\n    shortemer: ShortenUrl.reducer\r\n};\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n/*import { NavItem, NavLink } from 'reactstrap';*/\r\nimport { Collapse, Navbar, NavbarBrand, NavbarToggler } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport * as store from '../components/Login/Login.js';\r\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n//import { fas } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport '../css/navmenu.css';\r\n\r\nclass NavMenu extends React.PureComponent {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Navbar className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-custom\" aria-label=\"Main navigation\">\r\n                <div className=\"container-fluid\">\r\n                    <NavbarToggler onClick={this.toggle} className=\"navbar-toggler p-0 border-0\" data-bs-toggle=\"offcanvas\" aria-label=\"Toggle navigation\" >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </NavbarToggler>\r\n                    <NavbarBrand tag={Link} to=\"/shortenurl\" className=\"navbar-brand\">\r\n                        Tomz WebSide\r\n                    </NavbarBrand>\r\n                    <Collapse className=\"navbar-collapse offcanvas-collapse\" isOpen={this.state.isOpen} >\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 s-menu\">\r\n                            {/*<NavItem className=\"s-item\">*/}\r\n                            {/*    <NavLink tag={Link} to=\"/home\">選項</NavLink>*/}\r\n                            {/*</NavItem>*/}\r\n                            {/*<NavItem className=\"s-item\">*/}\r\n                            {/*    <NavLink tag={Link} to=\"/not_found\">選項</NavLink>*/}\r\n                            {/*</NavItem>*/}\r\n                            {/*<NavItem className=\"s-item\">*/}\r\n                            {/*    <NavLink tag={Link} to=\"/unauthorized\">選項</NavLink>*/}\r\n                            {/*</NavItem>*/}\r\n                        </ul>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n        );\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n};\r\n\r\nexport default connect((state) => state.loginUser, store.actionCreators)(NavMenu);\r\n","import * as React from 'react';\r\nimport NavMenu from './NavMenu.jsx';\r\n\r\nexport default class Layout extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavMenu />\r\n                <div className=\"nav-scroller bg-white shadow-sm\">\r\n                    <nav className=\"nav nav-underline\" aria-label=\"Secondary navigation\">\r\n                        {/*<a className=\"nav-link active\" aria-current=\"page\" href=\"/#\">Dashboard</a>*/}\r\n                        {/*<a className=\"nav-link\" href=\"/#\">*/}\r\n                        {/*    Friends*/}\r\n                        {/*    <span className=\"badge bg-light text-dark rounded-pill align-text-bottom\">27</span>*/}\r\n                        {/*</a>*/}\r\n                        {/*<a className=\"nav-link\" href=\"/#\">Explore</a>*/}\r\n                        {/*<a className=\"nav-link\" href=\"/#\">Suggestions</a>*/}\r\n                        {/*<a className=\"nav-link\" href=\"/#\">Link</a>*/}\r\n                        {/*<a className=\"nav-link\" href=\"/#\">Link</a>*/}\r\n                        {/*<a className=\"nav-link\" href=\"/#\">Link</a>*/}\r\n                        {/*<a className=\"nav-link\" href=\"/#\">Link</a>*/}\r\n                        {/*<a className=\"nav-link\" href=\"/#\">Link</a>*/}\r\n                    </nav>\r\n                </div>\r\n                <div className='container'>\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as store from '../Shortemer/ShortenUrl.js';\r\n\r\nimport '../../css/shortemerform.css';\r\n\r\nclass ShortenUrl extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"text-center\">\r\n                    <main className=\"form-signin\">\r\n                        <form>\r\n                            <img className=\"mb-4\" src=\"/logo_transparent.png\" alt=\"\" width=\"240\" height=\"240\"/>\r\n                            <h1 className=\"h3 mb-3 fw-normal\">縮網址</h1>\r\n                            <div className=\"form-floating\">\r\n                                <input type=\"email\" className=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\"\r\n                                    onChange={(e) => { this.props.setUrl(e.target.value); }} />\r\n                                <label htmlFor=\"floatingInput\">在這裡輸入你的網址:</label>\r\n                            </div>\r\n                            <button className=\"w-100 btn btn-lg btn-primary\" type=\"button\" onClick={() => { this.props.post(); }}>產生</button>\r\n                            <p className=\"mt-5 mb-3 text-muted\">© 2017–2021</p>\r\n                            <p className=\"mt-5 mb-3 text-muted\">{this.props.value.translationUrl}</p>\r\n                        </form>\r\n                    </main>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect((state) => state.shortemer, store.actionCreators)(ShortenUrl);\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch } from 'react-router-dom'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n/*import AuthorizedRoute from './store/AuthorizedRoute.js'*/\r\nimport ReactNotification from 'react-notifications-component'\r\n/*import AuthorizedRouteCookie from './store/AuthorizedRouteCookie.js'*/\r\n/*import { HashRouter } from \"react-router-dom\";*/\r\n\r\n// Layouts\r\nimport Layout from './components/Layout.jsx';\r\n//import Home from './components/Home/Home.jsx';\r\n//import Login from './components/Login/Login.jsx';\r\n//import Logout from './components/Login/Logout.jsx';\r\n//import NotFound from './components/Error/NotFound.jsx';\r\n//import Unauthorized from './components/Error/Unauthorized.jsx';\r\nimport ShortenUrl from './components/Shortemer/ShortenUrl.jsx';\r\n\r\nimport '../src/css/custom.css'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nexport default () => (\r\n    <div>\r\n        <ReactNotification />\r\n        <BrowserRouter>\r\n            <Layout>\r\n                <Switch>\r\n                    {/*<AuthorizedRoute exact path=\"/home\" component={Home} />*/}\r\n                    {/*<AuthorizedRoute path=\"/logout\" component={Logout} />*/}\r\n                    {/*<AuthorizedRoute path=\"/login\" component={Login} />*/}\r\n                    {/*<Route path=\"/not_found\" component={NotFound} />*/}\r\n                    {/*<AuthorizedRoute path=\"/unauthorized\" component={Unauthorized} />*/}\r\n                    <Route path=\"/shortenurl\" component={ShortenUrl} />\r\n                    <Redirect to=\"/shortenurl\" />\r\n                </Switch>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    </div>\r\n);","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const url = process.env.PUBLIC_URL as string;\r\n        const publicUrl = new URL(url, window.location.toString());\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing as ServiceWorker;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n            <App />\r\n        </ConnectedRouter>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { reducers } from './configureReducers.js';\r\nimport loggerMiddleware from 'redux-logger';\r\n\r\n\r\nexport default function configureStore(history, initialState) {\r\n    const middleware = [\r\n        thunkMiddleware,\r\n        routerMiddleware(history),\r\n        loggerMiddleware\r\n    ];\r\n\r\n    const rootReducer = combineReducers({\r\n        ...reducers,\r\n        router: connectRouter(history)\r\n    });\r\n\r\n    const enhancers = [];\r\n    const windowIfDefined = typeof window === 'undefined' ? null : window; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n    }\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware), ...enhancers)\r\n    );\r\n}\r\n"],"sourceRoot":""}