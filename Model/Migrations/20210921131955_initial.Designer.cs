// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.HeroKuPostgreSQL;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Model.Migrations
{
    [DbContext(typeof(TomzContext))]
    [Migration("20210921131955_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "en_US.UTF-8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Model.HeroKuPostgreSQL.PRO2E_AUTH_LOGIN_USER", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ArrivedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ArrivedDateForPrint")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("AssignBranchNo")
                        .HasColumnType("text");

                    b.Property<int?>("AttendanceBonus")
                        .HasColumnType("integer");

                    b.Property<int?>("BasicSalary")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Blood")
                        .HasColumnType("text");

                    b.Property<string>("CardNo")
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("text");

                    b.Property<string>("ContactZipCode")
                        .HasColumnType("text");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CustomedField1")
                        .HasColumnType("text");

                    b.Property<string>("CustomedField2")
                        .HasColumnType("text");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<int>("DependentsCount")
                        .HasColumnType("integer");

                    b.Property<string>("DeputyId")
                        .HasColumnType("text");

                    b.Property<string>("DisplayOrder")
                        .HasColumnType("text");

                    b.Property<string>("DrLicDrugNo")
                        .HasColumnType("text");

                    b.Property<string>("DrLicExclusiveNo")
                        .HasColumnType("text");

                    b.Property<string>("DrLicNo")
                        .HasColumnType("text");

                    b.Property<string>("EducationDepartment")
                        .HasColumnType("text");

                    b.Property<string>("EducationDepartment2")
                        .HasColumnType("text");

                    b.Property<string>("EducationEnd")
                        .HasColumnType("text");

                    b.Property<string>("EducationEnd2")
                        .HasColumnType("text");

                    b.Property<int?>("EducationId")
                        .HasColumnType("integer");

                    b.Property<int?>("EducationId2")
                        .HasColumnType("integer");

                    b.Property<string>("EducationSchool2")
                        .HasColumnType("text");

                    b.Property<string>("EducationStart")
                        .HasColumnType("text");

                    b.Property<string>("EducationStart2")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("EmergencyAddress")
                        .HasColumnType("text");

                    b.Property<string>("EmergencyContactPerson")
                        .HasColumnType("text");

                    b.Property<string>("EmergencyPhone")
                        .HasColumnType("text");

                    b.Property<string>("EmergencyRelationship")
                        .HasColumnType("text");

                    b.Property<int?>("EmployeeTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("En_EDINotification")
                        .HasColumnType("integer");

                    b.Property<string>("EnglishJobTitle")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExperienceCompany1")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceCompany2")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceCompany3")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceContent1")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceContent2")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceContent3")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceEnd1")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceEnd2")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceEnd3")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceStart1")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceStart2")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceStart3")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceTitle1")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceTitle2")
                        .HasColumnType("text");

                    b.Property<string>("ExperienceTitle3")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Fax")
                        .HasColumnType("text");

                    b.Property<string>("FullNameInChinese")
                        .HasColumnType("text");

                    b.Property<string>("FullNameInEnglish")
                        .HasColumnType("text");

                    b.Property<string>("HCNo")
                        .HasColumnType("text");

                    b.Property<string>("HCNoWithholding")
                        .HasColumnType("text");

                    b.Property<string>("HCSpecialIdentity")
                        .HasColumnType("text");

                    b.Property<DateTime?>("HealthCheckupDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("HouseOtherPhone")
                        .HasColumnType("text");

                    b.Property<string>("HousePhone")
                        .HasColumnType("text");

                    b.Property<string>("HousePhoneAreaCode")
                        .HasColumnType("text");

                    b.Property<int?>("IdTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("IncomeCountryId")
                        .HasColumnType("integer");

                    b.Property<int>("InitOutDays")
                        .HasColumnType("integer");

                    b.Property<int>("InsuranceAmount")
                        .HasColumnType("integer");

                    b.Property<int?>("InsuranceIdentityId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("InvaildDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IsAlive")
                        .HasColumnType("integer");

                    b.Property<int?>("IsCheckIP")
                        .HasColumnType("integer");

                    b.Property<int?>("IsLogin")
                        .HasColumnType("integer");

                    b.Property<int?>("Is_AttendanceBonus")
                        .HasColumnType("integer");

                    b.Property<int?>("Is_ClockIn")
                        .HasColumnType("integer");

                    b.Property<int>("Is_ElasticalHour")
                        .HasColumnType("integer");

                    b.Property<int?>("Is_Foreign")
                        .HasColumnType("integer");

                    b.Property<int>("Is_Married")
                        .HasColumnType("integer");

                    b.Property<int?>("Is_MealAllowance")
                        .HasColumnType("integer");

                    b.Property<int>("Is_MoreThan183Days")
                        .HasColumnType("integer");

                    b.Property<int?>("Is_OverTimePay")
                        .HasColumnType("integer");

                    b.Property<int?>("Is_PayRemittanceFee")
                        .HasColumnType("integer");

                    b.Property<int?>("Is_PaySalary")
                        .HasColumnType("integer");

                    b.Property<int>("Is_ReceiveFlowNotify")
                        .HasColumnType("integer");

                    b.Property<int?>("Is_Welfare")
                        .HasColumnType("integer");

                    b.Property<int?>("JobLevelId")
                        .HasColumnType("integer");

                    b.Property<string>("JobTitle")
                        .HasColumnType("text");

                    b.Property<int?>("JobTitleId")
                        .HasColumnType("integer");

                    b.Property<string>("LINo")
                        .HasColumnType("text");

                    b.Property<string>("LISpecialIdentity")
                        .HasColumnType("text");

                    b.Property<string>("LaborRetireSpecialIdentity")
                        .HasColumnType("text");

                    b.Property<int?>("LastEmployerContribution")
                        .HasColumnType("integer");

                    b.Property<int?>("LastWorkerContribution")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LeaveDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LeaveWithoutPayDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LicenseName1")
                        .HasColumnType("text");

                    b.Property<string>("LicenseName2")
                        .HasColumnType("text");

                    b.Property<string>("LicenseName3")
                        .HasColumnType("text");

                    b.Property<string>("LicenseNo1")
                        .HasColumnType("text");

                    b.Property<string>("LicenseNo2")
                        .HasColumnType("text");

                    b.Property<string>("LicenseNo3")
                        .HasColumnType("text");

                    b.Property<string>("LoginName")
                        .HasColumnType("text");

                    b.Property<int?>("MealAllowance")
                        .HasColumnType("integer");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<DateTime?>("NextAnnualLeaveAddingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("OverTimePayId")
                        .HasColumnType("integer");

                    b.Property<string>("PassportNo")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("PersonalAnnualLeaveType")
                        .HasColumnType("integer");

                    b.Property<string>("PhysicianCertificate")
                        .HasColumnType("text");

                    b.Property<string>("PhysicianSpecialist")
                        .HasColumnType("text");

                    b.Property<string>("Pic")
                        .HasColumnType("text");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("integer");

                    b.Property<string>("SSID")
                        .HasColumnType("text");

                    b.Property<string>("SalaryBranchNo")
                        .HasColumnType("text");

                    b.Property<int?>("SalaryDepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("School")
                        .HasColumnType("text");

                    b.Property<int?>("SecurityLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.Property<string>("Signature")
                        .HasColumnType("text");

                    b.Property<string>("Specialty")
                        .HasColumnType("text");

                    b.Property<string>("StandardNo")
                        .HasColumnType("text");

                    b.Property<int?>("SubsidyId")
                        .HasColumnType("integer");

                    b.Property<int?>("TaxAgreementId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("numeric");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.Property<int?>("Weight")
                        .HasColumnType("integer");

                    b.Property<decimal?>("WelfareRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WorkingHourPerDay")
                        .HasColumnType("numeric");

                    b.Property<int?>("p_EmployeeStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("p_HourPayBase")
                        .HasColumnType("integer");

                    b.Property<int?>("p_SalaryCaculateMethod")
                        .HasColumnType("integer");

                    b.Property<int?>("p_SalaryPayMethod")
                        .HasColumnType("integer");

                    b.Property<int?>("p_SalarySubject")
                        .HasColumnType("integer");

                    b.Property<int?>("p_TaxType")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.ToTable("PRO2E_AUTH_LOGIN_USERs");
                });
#pragma warning restore 612, 618
        }
    }
}
